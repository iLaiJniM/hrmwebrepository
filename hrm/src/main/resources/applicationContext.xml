<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:property-placeholder location="classpath:db.properties"/>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!--配置mybatis的sqlsessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入datasource，给SqlSessionFactoryBean内setdatasource提供数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--加载sql映射文件（xxxMapper.xml）-->
        <property name="mapperLocations" value="classpath:com/lijiamin/mapper/*.xml"/>
        <!--别名配置-->
        <property name="typeAliasesPackage" value="com.lijiamin.model"/>
    </bean>
    <!--扫描接口所在的包，为接口创建代理对象-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--接口所在的包的路径-->
        <property name="basePackage" value="com.lijiamin.dao"/>
        <!--引用sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
    <!--配置Spring声明式事务(切面类)-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>  <!--注入dataSource-->
    </bean>
    <!--事务增强配置（配置事务属性,事务方法的通配,代表拦截以其开头的方法）-->
    <!--advice选tx包下的、interceptor表示拦截-->
    <tx:advice id="interceptor" transaction-manager="transactionManager">
        <tx:attributes>    <!--所有方法拦截，植入切面类。设置读的方法只读-->
            <tx:method name="get*" read-only="true"/>
            <tx:method name="query**" read-only="true"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
    <!--配置aop：植入切面类代码（配置事务切点，并把切点和事务属性关联起来）-->
    <aop:config>
        <!--配置切点-->
        <aop:pointcut id="pc" expression="execution(* com.lijiamin.service.serviceImpl.*.*(..))"/>
        <!--配置切面-->
        <aop:advisor advice-ref="interceptor" pointcut-ref="pc"/>
    </aop:config>
</beans>